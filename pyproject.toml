[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "python-prompt-manager"
dynamic = ["version", "readme"]
description = "Centralized prompt management for LLM applications"
authors = [
    {name = "Andrew OHarney", email = "noemail@enodomain.com"},
]
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Operating System :: OS Independent",
]
keywords = ["prompt", "prompt-management", "llm", "openai", "ai"]

[project.optional-dependencies]
openai = ["openai>=1.0.0"]
yaml = ["pyyaml>=5.4"]
django = ["django>=3.2"]
pydantic = ["pydantic>=2.0"]
all = ["openai>=1.0.0", "pyyaml>=5.4", "pydantic>=2.0"]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-django>=4.5",
    "pytest-env>=0.8",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "tox>=4.0",
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/python-prompt-manager"
Documentation = "https://python-prompt-manager.readthedocs.io"
Repository = "https://github.com/yourusername/python-prompt-manager"
Issues = "https://github.com/yourusername/python-prompt-manager/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "prompt_manager.__version__"}
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src/prompt_manager"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]